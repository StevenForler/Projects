:root { /*this is how to create a variable bucket to be able to reused a color or font multiple times 
    and all you have to do is grab the variable for the name of that bucket and put it in where you need it */
    --primary-color: #adf0d4;
    --secondary-color: #1fd8a4;
    --bg-color: #0d1512;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Inter', sans-serif;
    transition-duration: 200ms;
}

body {
    background: var(--bg-color);
    color: var(--primary-color);
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    gap: 72px;
    padding: 14px;
}

.darkerText {
    color: var(--secondary-color);
}

header, main, footer {
    max-width: 700px;
    margin: 0 auto;
    width: 100%;
}

p {
    font: 1.05em;
}

header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 14px;

}

nav {
    color: var(--secondary-color);
    display: flex;
    align-items: center;
    gap: 32px;
}

nav a {
    cursor: pointer;
    text-decoration: none;
}

nav a:hover {
    opacity: 0.7;
}

main,
section,
.nameContainer {
    display: flex;
    flex-direction: column;
}

main {
    gap: 64px;
    padding-bottom: 64px;
}

section {
    gap: 48px; 
}
.nameContainer {
    gap: 8px;
}

.statsContainer {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    gap: 24px;
}
.imgContainer { 
    border-radius: 100%;
    max-width: 144px;
    overflow: hidden;
}

.imgContainer img {
    width: 100%;
    aspect-ratio: 1/1;
    object-fit: cover;
}

.stats {
    display: flex;
    flex-direction: column;
    gap: 14px;
}

.stats>div { /*what set this specifically I thought getting the class like on line 94 would work with this*/
    flex: 1;
    display: flex;
    align-items: center;
    gap: 8px;
}

.stats div i {
    font-size: 1.4em;
}

.stats div div { /*this is to make sure that the text all line up correctly.*/
    display: grid;
    place-items: center;
    min-width: 40px;
}

.aboutMe {
    line-height: 1.5em;
}

.outreach {
    display: flex;
    align-items: center;
    gap: 14px;
    cursor: pointer;
    width: fit-content;
    margin-right: auto;
    text-decoration: none;
}

.outreach i {
    transform: rotate(-45deg); /*this is if I want to rotate an icon for any reason*/ 
}

.outreach:hover {
    opacity: 0.7;
}


.projectContainer {
    display: flex;
    flex-direction: column;
    gap: 32px;
}

.headerText {
    margin-bottom: 24px;
}

.projectItem {
    display: flex;
    align-items: stretch;
    gap: 24px;
}

.projectItem div:first-child {
    display: flex;
    flex-direction: column;
    gap: 14px;
}

.projectItem>div:last-child {
    aspect-ratio: 9/16; 
    max-width: 30%;
    overflow: hidden;
}

.projectItem>div:last-child img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 8px;
}
/* .projects {
    display: flex;
    align-items: center;
    gap: 14px;
    cursor: pointer;
    width: fit-content;
    margin-right: auto;
}

.projects:hover {
    opacity: 0.7;
} */

.linkContainer {
    display: flex;
    align-items: center;
    gap: 24px;
}

.linkItem {
    display: flex;
    flex-direction: row !important;
    align-items: center;
    gap: 14px !important;
    color: var(--primary-color);
    text-decoration: none;
    cursor: pointer;
}

.linkItem:hover {
    opacity: 0.7;
}
.linkItem p {
    font-size: 0.9em;
}

@media (min-width: 640px) {
    .statsContainer{
        flex-direction: row;
    }
    .stats {
        gap: 0px;
    }
    .aboutMe { /*this is suppose to help keep the paragraph just a smidge tighter 
        until it go into the mobile section to then take up the whole space*/
        width: 80%;
        margin-right: auto;
    }
}